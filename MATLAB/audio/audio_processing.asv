%% Plot audio

clear all
close all

files = get_audio_data("All"); 

hold on;

for i = 1:size(files, 1)
    N = length(files{});
    data = files(i, 1);
    
    time = (1:length(data)) / fs;
    [amp, freq] = get_frequencies_spectrum(data); 

    if i == 1
        plot(freq, amp, 'r');
    else
        plot(freq, amp, 'b');
    end
    
    xlabel('Time');
    ylabel('Amplitude');
    fprintf('Information of the sound file "%s":\n', fileName);
    fprintf('Duration= %g seconds\n', length(data)/fs);
    fprintf('Number of samples %g:\n', N);
    fprintf('Sampling rate = %g samples/second\n', fs);
end

%% Finding the phase

t = time_1;

C1 = data_1;
C2 = data_2;

C1s = [mean(C1); 2*std(C1)];
C2s = [mean(C2); 2*std(C2)];
sinsum = C1 + C2;
sinsums = [mean(sinsum); 2*std(sinsum)];
c_fcn = @(theta) sqrt(C1s(2).^2 + C2s(2).^2 + 2*C1s(2).*C2s(2).*cos(theta)) - sinsums(2);
theta = fzero(c_fcn, 1);
thetadeg = theta*180/pi;
phi_fcn = @(theta) atan2(C2s(2).*sin(theta), C1s(2) + C2s(2).*cos(theta));
phi = fminsearch(@(b)norm(phi_fcn(b)), 1);
figure
plot(t, C1, t, C2, t, sinsum)
grid
legend('Ch 1', 'Ch 2', 'Ch 1 + Ch 2', 'Location','best')
text(250, 2, sprintf('\\theta = %.3f rad = %.3f\\circ', theta, thetadeg))